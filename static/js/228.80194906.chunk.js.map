{"version":3,"file":"static/js/228.80194906.chunk.js","mappings":"gNACA,G,QAA0B,0BAA1B,EAAiE,6BAAjE,EAA0I,0BAA1I,EAA8K,yBAA9K,EAA6M,qB,mBCa7M,EARmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAOC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKC,IAAKR,EAAMS,OAAQL,UAAWC,EAAOK,IAAK,SAC/CH,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAACC,GAAIX,EAAKK,SAAEN,EAAMa,SAElC,ECFA,EAJgB,SAACb,GACb,OAAOO,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAUC,SAAEN,EAAMc,SAC7C,E,iDCEMC,GAAcC,EAAAA,EAAAA,GAAiB,IAqB/BC,GAAmBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAnBE,SAAClB,GACxB,OACIG,EAAAA,EAAAA,MAAA,QAAMiB,SAAUpB,EAAMqB,aAAaf,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACT,KAAK,UACLU,UAAWC,EAAAA,GACXC,KAAK,OACLC,YAAa,UACbC,SAAU,CAACC,EAAAA,EAAeb,QAIrCR,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qBAIxB,IA2CA,EAhCgB,SAACN,GAGb,IAAI6B,EAAiB7B,EAAM8B,aAAaC,QAAQC,KAAI,SAAAC,GAAC,OAAI1B,EAAAA,EAAAA,KAAC2B,EAAU,CAAChC,GAAI+B,EAAE/B,GAAIW,KAAMoB,EAAEpB,KAAMJ,OAAQwB,EAAExB,QAAS,IAE5G0B,EAAkBnC,EAAM8B,aAAaM,SAASJ,KAAI,SAAAK,GAAC,OAAI9B,EAAAA,EAAAA,KAAC+B,EAAO,CAACxB,QAASuB,EAAEvB,QAASZ,GAAImC,EAAEnC,IAAK,IAOnG,OAAKF,EAAMuC,QAGPpC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAUC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAcC,SACzBuB,KAEL1B,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACIC,EAAAA,EAAAA,KAACU,EAAgB,CACbG,SAdM,SAACoB,GACnBC,QAAQC,IAAIF,EAAM1B,SAClBd,EAAM2C,WAAWH,EAAM1B,QAC3B,KAYYP,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAWC,SACtB6B,WAXS5B,EAAAA,EAAAA,KAACqC,EAAAA,EAAQ,CAAChC,GAAI,UAiB5C,E,oBCnEaiC,EAAqB,SAACC,GAC/B,OAAOA,EAAMhB,YACjB,ECqBaiB,EAAqB,SAACC,GAC/B,MAAO,CACHL,WAAY,SAACM,GAAY,OAAMD,GAASE,EAAAA,EAAAA,GAAwBD,GAAc,IAAI,EAE1F,EAEIE,GAA6BC,EAAAA,EAAAA,GAAiBC,GAElD,GADyBC,EAAAA,EAAAA,KAbD,SAACR,GACrB,MAAO,CACHhB,aAAce,EAAmBC,GAEzC,GASkDC,EAAzBO,CAA6CH,E,mHC1BhEI,EAA6B,SAACT,GAChC,MAAO,CACHP,OAAQO,EAAMU,KAAKjB,OAE3B,EAaA,IAZyB,SAACkB,GAAoB,IACpCC,EAAiB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAIlB,OAJkBC,EAAAA,EAAAA,GAAAR,EAAA,EAAAS,IAAA,SAAA3B,MACnB,WACI,OAAK4B,KAAKpE,MAAMuC,QACThC,EAAAA,EAAAA,KAACkD,GAASY,EAAAA,EAAAA,GAAA,GAAKD,KAAKpE,SADIO,EAAAA,EAAAA,KAACqC,EAAAA,EAAQ,CAAChC,GAAI,SAEjD,KAAC8C,CAAA,CAJkB,CAASY,EAAAA,WAQhC,OAAOhB,EAAAA,EAAAA,IAAQC,EAARD,CAAoCI,EAC/C,C","sources":["webpack://samurai-sn/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","redux/dialogs-selectors.ts","Components/Dialogs/DialogsContainer.tsx","Components/hoc/WithAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__+UuNP\",\"dialogItems\":\"Dialogs_dialogItems__caqtM\",\"active\":\"Dialogs_active__vNutT\",\"messages\":\"Dialogs_messages__aRP8a\",\"message\":\"Dialogs_message__aEkV8\",\"img\":\"Dialogs_img__xiBmQ\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom/\";\r\nimport {DialogsType} from \"../../../redux/state\";\r\n\r\n\r\nconst DialogItem = (props: DialogsType) => {\r\n    let path = '/dialogs/' + props.id\r\n    return <div className={s.dialogItems}>\r\n        <img src={props.avatar} className={s.img} alt={'ava'} />\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n}\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {MessagesType} from \"../../../redux/state\";\r\n\r\n\r\n\r\nconst Message = (props: MessagesType) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {MessagePageType} from \"../../redux/state\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../comon/FormControls/FormControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nexport const DialogsForm = (props: any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"message\"\r\n                       component={Textarea}\r\n                       type=\"text\"\r\n                       placeholder={'message'}\r\n                       validate={[requiredField, maxLength10]}\r\n                />\r\n\r\n            </div>\r\n            <div>\r\n                <button>send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form: 'dialogAddMessageForm'})(DialogsForm)\r\n\r\ntype LocalDialogsType = {\r\n    messagesPage: MessagePageType\r\n    addMessage: (text: string) => void\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nconst Dialogs = (props: LocalDialogsType) => {\r\n\r\n\r\n    let dialogsElement = props.messagesPage.dialogs.map(d => <DialogItem id={d.id} name={d.name} avatar={d.avatar}/>)\r\n\r\n    let messagesElement = props.messagesPage.messages.map(m => <Message message={m.message} id={m.id}/>)\r\n\r\n    const addNewMessage = (value: any) => {\r\n        console.log(value.message)\r\n        props.addMessage(value.message)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div>\r\n                <DialogsReduxForm\r\n                    onSubmit={addNewMessage}/>\r\n                <div className={s.messages}>\r\n                    {messagesElement}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Dialogs","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const getMessageSelector = (state: AppStateType) => {\r\n    return state.messagesPage\r\n}\r\n\r\n// export const getStatusSelector = (state: AppStateType) => {\r\n//     return state.profilePage.status\r\n// }\r\n\r\n// export const getPageSize = (state: AppStateType) => {\r\n//     return state.usersPage.pageSize\r\n// }\r\n//\r\n// export const getCurrentPage = (state: AppStateType) => {\r\n//     return state.usersPage.currentPage\r\n// }\r\n//\r\n// export const getIsFetching = (state: AppStateType) => {\r\n//     return state.usersPage.isFetching\r\n// }\r\n//\r\n// export const getFollowingInProgress = (state: AppStateType) => {\r\n//     return state.usersPage.followingInProgress\r\n// }\r\n\r\n","import {\r\n    addMessageActionCreator,\r\n    InitialStateType,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport WithAuthRedirect from \"../hoc/WithAuthRedirect\";\r\nimport {getMessageSelector} from \"../../redux/dialogs-selectors\";\r\n\r\ntype MapStatePropsType = {\r\n    messagesPage: InitialStateType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addMessage: (text: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        messagesPage: getMessageSelector(state),\r\n    }\r\n}\r\n\r\nexport const mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addMessage: (text: string) =>  dispatch(addMessageActionCreator(text ? text : '')),\r\n    }\r\n}\r\n\r\nlet AuthRedirectComponent: any = WithAuthRedirect(Dialogs)\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\nexport default DialogsContainer\r\n// export default compose(\r\n//     connect(mapStateToProps, mapDispatchToProps),\r\n//     WithAuthRedirect\r\n// ) (Dialogs)","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nconst WithAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any> {\r\n        render(): React.ReactNode {\r\n            if (!this.props.isAuth) return <Redirect to={'login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n};\r\n\r\nexport default WithAuthRedirect;"],"names":["props","path","id","_jsxs","className","s","children","_jsx","src","avatar","alt","NavLink","to","name","message","maxLength10","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","type","placeholder","validate","requiredField","dialogsElement","messagesPage","dialogs","map","d","DialogItem","messagesElement","messages","m","Message","isAuth","value","console","log","addMessage","Redirect","getMessageSelector","state","mapDispatchToProps","dispatch","text","addMessageActionCreator","AuthRedirectComponent","WithAuthRedirect","Dialogs","connect","mapStateToPropsForRedirect","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","this","_objectSpread","React"],"sourceRoot":""}